#include <iostream>
#include <ctime>
#include "main.h"
#include "encoder.h"
#include "decoder.h"
#include <iomanip>


int main(int argc, char* argv[])
{
	/*unsigned long* x = new unsigned long[2];
	x[0] = 44500002, x[1] = 4234432;
	std::ofstream file;
	file.open("teste", std::ofstream::out| std::ofstream::binary);
	file.write((char*)&x,sizeof(unsigned long) * 2);	
		std::cout << "hex: '" << std::hex << x[0] << " " << x[1] <<  "'\n";
	file.close();	

	std::ifstream f;
	f.open("teste", std::ios::in|std::ios::binary);
	f.readsome((char*)&x,sizeof(unsigned long) * 2);
	std::cout << "hex: '" << std::hex << x[0] << " " << x[1] <<  "'\n";
	*//**char function;
	std::string input;
	std::string output;
	int start_s=clock();
	// the code you wish to time goes here
int stop_s=clock();
cout << "time: " << (stop_s-start_s)/double(CLOCKS_PER_SEC)*1000 << endl;
	//Input:
	std::cout << "Mode [c/d]:\n";
	std::cin >> function;
	std::cout << "intput path:\n";
	std::cin >> input;
	std::cout << "output path:\n";
	std::cin >> output;
	
		

	//what to do?
	if (function == 'c'){
                decode (input,output);
	}else if (function == 'd'){
		decode(input,output);
	}else{
		std::cout <<"ERROR: use mode 'c' to compress or 'd' to decompress\n";
	}
	*/

	test();

	return 0;

}

void test(){
	// the code you wish to time goes here
	int start_s=clock();
	encode("2.jpg","3.jpg");
	int stop_s=clock();
		
	start_s = stop_s;
	std::cout << "writed, now load: "<< "time: " << (stop_s-start_s)/double(CLOCKS_PER_SEC)*1000 << std::endl;

	decode("3.jpg","4.jpg");
	stop_s =clock();
	std::cout << "writed, now load: "<< "time: " << (stop_s-start_s)/double(CLOCKS_PER_SEC)*1000 << std::endl;
}

void encode(std::string input, std::string output){
	Encoder ec = Encoder();
	ec.fileName(input,output);
	std::cout << "Start Sampling the file\n";	
	ec.startSample();
	std::cout << "Start Writing final file\n";
	ec.startWriting();
	std::cout << "End write, lets close\n";
	ec.close();
}



void decode(std::string input, std::string output){
	Decoder ec = Decoder();
	ec.fileName(input,output);
	std::cout << "Start reading the file\n";	
	ec.startReading();
	std::cout << "Start Writing final file\n";
	
	ec.startWriting();
	std::cout << "End write, lets close\n";
	ec.close();

}
